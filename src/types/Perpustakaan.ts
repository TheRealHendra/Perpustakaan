/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "./common";

export interface PerpustakaanInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "cariBuku"
      | "hapusAdmin"
      | "hapusBuku"
      | "tambahAdmin"
      | "tambahBuku"
      | "updateBook"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "cariBuku", values: [string]): string;
  encodeFunctionData(
    functionFragment: "hapusAdmin",
    values: [AddressLike]
  ): string;
  encodeFunctionData(functionFragment: "hapusBuku", values: [string]): string;
  encodeFunctionData(
    functionFragment: "tambahAdmin",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "tambahBuku",
    values: [string, string, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "updateBook",
    values: [string, string, BigNumberish, string]
  ): string;

  decodeFunctionResult(functionFragment: "cariBuku", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "hapusAdmin", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "hapusBuku", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "tambahAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "tambahBuku", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "updateBook", data: BytesLike): Result;
}

export interface Perpustakaan extends BaseContract {
  wait(): unknown;
  Library(address: string, arg1: string, arg2: string): unknown;
  connect(runner?: ContractRunner | null): Perpustakaan;
  waitForDeployment(): Promise<this>;

  interface: PerpustakaanInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  cariBuku: TypedContractMethod<
    [_isbn: string],
    [[string, bigint, string]],
    "view"
  >;

  hapusAdmin: TypedContractMethod<[_admin: AddressLike], [void], "nonpayable">;

  hapusBuku: TypedContractMethod<[_isbn: string], [void], "nonpayable">;

  tambahAdmin: TypedContractMethod<[_admin: AddressLike], [void], "nonpayable">;

  tambahBuku: TypedContractMethod<
    [
      _isbn: string,
      _judul: string,
      _tahunDibuat: BigNumberish,
      _penulis: string
    ],
    [void],
    "nonpayable"
  >;

  updateBook: TypedContractMethod<
    [
      _isbn: string,
      _judul: string,
      _tahunDibuat: BigNumberish,
      _penulis: string
    ],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "cariBuku"
  ): TypedContractMethod<[_isbn: string], [[string, bigint, string]], "view">;
  getFunction(
    nameOrSignature: "hapusAdmin"
  ): TypedContractMethod<[_admin: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "hapusBuku"
  ): TypedContractMethod<[_isbn: string], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "tambahAdmin"
  ): TypedContractMethod<[_admin: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "tambahBuku"
  ): TypedContractMethod<
    [
      _isbn: string,
      _judul: string,
      _tahunDibuat: BigNumberish,
      _penulis: string
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "updateBook"
  ): TypedContractMethod<
    [
      _isbn: string,
      _judul: string,
      _tahunDibuat: BigNumberish,
      _penulis: string
    ],
    [void],
    "nonpayable"
  >;

  filters: {};
}
